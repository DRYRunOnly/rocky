name: Build & Release npm (pack + attach .tgz if present)

on:
  push:
    tags:
      - "v*.*.*"      # e.g. v1.0.0
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: "üß∞ Checkout"
        uses: actions/checkout@v4

      - name: "üß± Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Try to pack, but DO NOT fail the job if npm errors.
      # If a .tgz exists, capture its filename; otherwise leave ASSET empty.
      - name: "üéÅ npm pack (best-effort; ignore failure)"
        id: pack
        shell: bash
        run: |
          set +e
          echo "Running npm pack (ignoring errors)..."
          OUT_JSON="$(npm pack --json 2>/dev/null)"
          STATUS=$?
          echo "npm pack exit status: $STATUS"

          # Try to parse filename if JSON exists and pack succeeded
          FILE=""
          if [ $STATUS -eq 0 ] && [ -n "$OUT_JSON" ]; then
            # jq may fail if OUT_JSON is not valid; ignore errors
            FILE="$(echo "$OUT_JSON" | jq -r '.[0].filename' 2>/dev/null || true)"
          fi

          # Fallback: if npm printed nothing but still produced a .tgz, grab the first one
          if [ -z "$FILE" ]; then
            FILE="$(ls -1 *.tgz 2>/dev/null | head -n1 || true)"
          fi

          if [ -n "$FILE" ] && [ -f "$FILE" ]; then
            echo "‚úÖ Packed tarball: $FILE"
            echo "file=$FILE" >> "$GITHUB_OUTPUT"
            echo "ASSET=$FILE" >> "$GITHUB_ENV"
            echo "has_asset=true" >> "$GITHUB_OUTPUT"
          else
            echo "‚ö†Ô∏è No .tgz produced; proceeding without an attached artifact."
            echo "file=" >> "$GITHUB_OUTPUT"
            echo "ASSET=" >> "$GITHUB_ENV"
            echo "has_asset=false" >> "$GITHUB_OUTPUT"
          fi

      # If we have a .tgz, attach it to the release
      - name: "üè∑Ô∏è Create GitHub Release (attach .tgz)"
        if: steps.pack.outputs.has_asset == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ASSET }}
          token: ${{ github.token }}
          # If a tag was pushed, use it; otherwise fall back to a name
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || 'v0.0.0' }}
          target_commitish: ${{ github.sha }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || 'Release' }}
          generate_release_notes: true

      # If we do NOT have a .tgz, still create a release (source-only links)
      - name: "üè∑Ô∏è Create GitHub Release (source-only)"
        if: steps.pack.outputs.has_asset != 'true'
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ github.token }}
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || 'v0.0.0' }}
          target_commitish: ${{ github.sha }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || 'Release' }}
          generate_release_notes: true